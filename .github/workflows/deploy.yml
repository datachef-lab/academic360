name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: ðŸš€ Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "ðŸ”¹ Ensuring Docker is running..."
            sudo systemctl start docker && sudo systemctl enable docker

            echo "ðŸ”¹ Setting permissions for the project directory..."
            sudo chown -R ubuntu:ubuntu /home/ubuntu/workspace/new-academic360
            sudo chmod -R 755 /home/ubuntu/workspace/new-academic360

            echo "ðŸ”¹ Navigating to project directory..."
            cd /home/ubuntu/workspace/new-academic360 || exit 1

            # Check if the repository exists; if not, clone it
            if [ ! -d "/home/ubuntu/workspace/new-academic360/.git" ]; then
            echo "ðŸ”¹ Cloning the Git repository..."
            sudo git clone https://github.com/datachef-lab/academic360.git code
            fi

            echo "Inside repo"
            cd code

            echo "ðŸ”¹ Removing old containers..."
            sudo docker-compose down || true

            echo "ðŸ”¹ Cleaning up Docker resources..."
            sudo docker system prune -af || true

            echo "ðŸ”¹ Resetting Git repository..."
            sudo git fetch --all
            sudo git reset --hard origin/main
            sudo git pull origin main

            echo "ðŸ”¹ Setting execution permissions for scripts..."
            chmod +x *.sh || true

            echo "ðŸ”¹ Creating backend environment file..."
            sudo cat <<EOF > /home/ubuntu/workspace/new-academic360/code/backend.env
            NODE_ENV=production
            PORT=5000
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            OLD_DB_HOST=${{ secrets.OLD_DB_HOST }}
            OLD_DB_PORT=${{ secrets.OLD_DB_PORT }}
            OLD_DB_USER=${{ secrets.OLD_DB_USER }}
            OLD_DB_NAME=${{ secrets.OLD_DB_NAME }}
            OLD_DB_PASSWORD=${{ secrets.OLD_DB_PASSWORD }}
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            LOG_DIRECTORY=${{ secrets.LOG_DIRECTORY }}
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            EOF

            echo "ðŸ”¹ Creating database environment file..."
            sudo cat <<EOF > /home/ubuntu/workspace/new-academic360/code/db.env
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            EOF

            echo "ðŸ”¹ Creating frontend environment file..."
            sudo cat <<EOF > /home/ubuntu/workspace/new-academic360/code/frontend.env
            VITE_APP_BACKEND_URL=${{ secrets.VITE_APP_BACKEND_URL }}
            EOF

            echo "ðŸ”¹ Building and starting services..."
            sudo docker-compose up --build -d

            echo "ðŸ”¹ Restarting backend and frontend..."
            sudo docker-compose restart backend frontend

            echo "âœ… Deployment completed!"
